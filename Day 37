Day 37/100: Find the Original Tyoed String 1

Problem Statement #3330

Problem Statement Explanation:

Alice is attempting to type a specific string on her computer. However, she tends to be clumsy and may press a key for too long, resulting in a character being typed multiple times.
Although Alice tried to focus on her typing, she is aware that she may still have done this at most once.
You are given a string word, which represents the final output displayed on Alice's screen.
Return the total number of possible original strings that Alice might have intended to type.

Solution Approach:

The core of this problem lies in understanding the "at most once" constraint. This means we need to account for two main scenarios for forming the word:

No Extension: 
Alice typed the word exactly as it appears. 
This always accounts for 1 possible original string (the word itself).

Exactly One Extension: 
One specific character in Alice's intended string was pressed too long. 
This implies that if we see a sequence of k identical characters (e.g., "ccc"), it could have been formed by extending a shorter sequence of that character.

Here's the code;

class Solution {
    public int possibleStringCount(String word) {
        int ans = 1;
        for (int i = 1; i < word.length(); ++i)
        if (word.charAt(i) == word.charAt(i - 1))
        ++ans;
        return ans;
    }
}

Complexity:

Time Complexity: O(n)
Space Complexity: O(1)
