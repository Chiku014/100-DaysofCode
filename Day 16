Day 16/100: Maximum Difference between Even and Odd Frequency

Problem Statement #3442


Approach: Count The Frequency Of Each Character Intuition
We use a hash map to count the number of occurrences of each character in the string s.
In each key-value pair of the hash map, the key represents a character, and the value represents the number of times that character appears.
After the statistics are completed, we traverse the values in the hash map to find the largest odd number maxOdd and the smallest even number minEven. 
The final answer is maxOddâˆ’minEven.


Here's the Code;

import java.util.HashMap;
import java.util.Map;

class Solution {
    public int maxDifference(String s) {  
        Map<Character, Integer> freqMap = new HashMap<>();
        for (char c : s.toCharArray()) {
            freqMap.put(c, freqMap.getOrDefault(c, 0) + 1);
        }
        int maxOdd = 0;
        int minEven = Integer.MAX_VALUE;
        for (int freq : freqMap.values()) {
            if (freq % 2 == 1) {
                maxOdd = Math.max(maxOdd, freq);
            } else {
                minEven = Math.min(minEven, freq);
            }
        }
        return maxOdd - minEven;
    }
}
