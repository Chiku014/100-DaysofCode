Day 111/150: Find Most Frequent Vowel and Consonant

Problem Statement #3541

Problem Statement Explanation:

You are given a string s consisting of lowercase English letters ('a' to 'z').

Your task is to:
Find the vowel (one of 'a', 'e', 'i', 'o', or 'u') with the maximum frequency.
Find the consonant (all other letters excluding vowels) with the maximum frequency.
Return the sum of the two frequencies.

Note: If multiple vowels or consonants have the same maximum frequency, you may choose any one of them. 
If there are no vowels or no consonants in the string, consider their frequency as 0.
The frequency of a letter x is the number of times it occurs in the string.

Solution Approach:

Character Frequency Counting: Use an array of size 26 to count the frequency of each letter in the input string.
Separate Processing: Iterate through the frequency array and maintain two separate maximum values:
maxVowelFreq: Maximum frequency among vowels ('a', 'e', 'i', 'o', 'u')
maxConsonantFreq: Maximum frequency among consonants (all other letters)
Return Sum: Return the sum of the maximum vowel frequency and maximum consonant frequency.

Here's the code:

class Solution {
    public int maxFreqSum(String s) {
        int[] cnt = new int[26];
        
        for (char c : s.toCharArray()) {
            ++cnt[c - 'a'];
        }
        
        int maxVowelFreq = 0;
        int maxConsonantFreq = 0;
        
        for (int i = 0; i < cnt.length; ++i) {
            char c = (char) (i + 'a');
            
            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {
                maxVowelFreq = Math.max(maxVowelFreq, cnt[i]);
            } else {
                maxConsonantFreq = Math.max(maxConsonantFreq, cnt[i]);
            }
        }
        
        return maxVowelFreq + maxConsonantFreq;
    }
}

Complexity:

Time Complexity: O(n)
Space Complexity: O(1)


